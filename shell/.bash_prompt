#!/usr/bin/env bash

# ————————————————————————
# GIT BRANCH IN PROMPT
# ————————————————————————

function gitprompt() {
  local s='';
  local b='';

  # check if the current directory is a repository
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then

    # check if the current directory is not .git
    if [ "$(git rev-parse --is-inside-git-dir 2>/dev/null)" == 'false' ]; then

      # ensure the index is up to date
      git update-index --really-refresh -q &>/dev/null;

      # check for untracked files
      if [ -n "$(git ls-files --others --exclude-standard)" ]; then
        s+='🐛';
      fi

      # check for unstaged changes
      if ! $(git diff-files --quiet --ignore-submodules --); then
        s+='🦋';
      fi

      # check for uncommitted changes in the index
      if ! $(git diff --quiet --ignore-submodules --cached); then
        s+='🦄';
      fi

      # verify commit pending push
      if [[ `git diff --stat --cached origin/master` ]]; then
        s+='🔥';
      fi

      b="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
        git rev-parse --short HEAD 2> /dev/null || \
        echo 'unknown')";

      [ -n "${s}" ] && s="[${s}]";
      echo -e " (${b})${s}";
    else
      return;
    fi
  else
    return;
  fi
}

# colors
reset="\[\033[00m\]";
folder="\[\033[01;33m\]";
branch="\[\033[00;32m\]";

# custom
export PS1="\u🌀\h ::${folder} \W${reset} -${branch}\$(gitprompt)${reset} $ "
